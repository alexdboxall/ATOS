
kernel_main
can use 0x124000
can use 0x125000
can use 0x126000
can use 0x127000
can use 0x128000
can use 0x129000
can use 0x12A000
can use 0x12B000
can use 0x12C000
can use 0x12D000
can use 0x12E000
can use 0x12F000
can use 0x130000
can use 0x131000
can use 0x132000
can use 0x133000
can use 0x134000
can use 0x135000
can use 0x136000
can use 0x137000
can use 0x138000
can use 0x139000
can use 0x13A000
can use 0x13B000
can use 0x13C000
can use 0x13D000
can use 0x13E000
can use 0x13F000
can use 0x140000
can use 0x141000
can use 0x142000
can use 0x143000
can use 0x144000
can use 0x145000
can use 0x146000
can use 0x147000
can use 0x148000
can use 0x149000
can use 0x14A000
can use 0x14B000
can use 0x14C000
can use 0x14D000
can use 0x14E000
can use 0x14F000
can use 0x150000
can use 0x151000
can use 0x152000
can use 0x153000
can use 0x154000
can use 0x155000
can use 0x156000
can use 0x157000
can use 0x158000
can use 0x159000
can use 0x15A000
can use 0x15B000
can use 0x15C000
can use 0x15D000
can use 0x15E000
can use 0x15F000
can use 0x160000
can use 0x161000
can use 0x162000
can use 0x163000
can use 0x164000
can use 0x165000
can use 0x166000
can use 0x167000
can use 0x168000
can use 0x169000
can use 0x16A000
can use 0x16B000
can use 0x16C000
can use 0x16D000
can use 0x16E000
can use 0x16F000
can use 0x170000
can use 0x171000
can use 0x172000
can use 0x173000
can use 0x174000
can use 0x175000
can use 0x176000
can use 0x177000
can use 0x178000
can use 0x179000
can use 0x17A000
can use 0x17B000
can use 0x17C000
can use 0x17D000
can use 0x17E000
can use 0x17F000
can use 0x180000
can use 0x181000
can use 0x182000
can use 0x183000
can use 0x184000
can use 0x185000
can use 0x186000
can use 0x187000
can use 0x188000
can use 0x189000
can use 0x18A000
can use 0x18B000
can use 0x18C000
can use 0x18D000
can use 0x18E000
can use 0x18F000
can use 0x190000
can use 0x191000
can use 0x192000
can use 0x193000
can use 0x194000
can use 0x195000
can use 0x196000
can use 0x197000
can use 0x198000
can use 0x199000
can use 0x19A000
can use 0x19B000
can use 0x19C000
can use 0x19D000
can use 0x19E000
can use 0x19F000
can use 0x1A0000
can use 0x1A1000
can use 0x1A2000
can use 0x1A3000
can use 0x1A4000
can use 0x1A5000
can use 0x1A6000
can use 0x1A7000
can use 0x1A8000
can use 0x1A9000
can use 0x1AA000
can use 0x1AB000
can use 0x1AC000
can use 0x1AD000
can use 0x1AE000
can use 0x1AF000
can use 0x1B0000
can use 0x1B1000
can use 0x1B2000
can use 0x1B3000
can use 0x1B4000
can use 0x1B5000
can use 0x1B6000
can use 0x1B7000
can use 0x1B8000
can use 0x1B9000
can use 0x1BA000
can use 0x1BB000
can use 0x1BC000
can use 0x1BD000
can use 0x1BE000
can use 0x1BF000
can use 0x1C0000
can use 0x1C1000
can use 0x1C2000
can use 0x1C3000
can use 0x1C4000
can use 0x1C5000
can use 0x1C6000
can use 0x1C7000
can use 0x1C8000
can use 0x1C9000
can use 0x1CA000
can use 0x1CB000
can use 0x1CC000
can use 0x1CD000
can use 0x1CE000
can use 0x1CF000
can use 0x1D0000
can use 0x1D1000
can use 0x1D2000
can use 0x1D3000
can use 0x1D4000
can use 0x1D5000
can use 0x1D6000
can use 0x1D7000
can use 0x1D8000
can use 0x1D9000
can use 0x1DA000
can use 0x1DB000
can use 0x1DC000
can use 0x1DD000
can use 0x1DE000
can use 0x1DF000
can use 0x1E0000
can use 0x1E1000
can use 0x1E2000
can use 0x1E3000
can use 0x1E4000
can use 0x1E5000
can use 0x1E6000
can use 0x1E7000
can use 0x1E8000
can use 0x1E9000
can use 0x1EA000
can use 0x1EB000
can use 0x1EC000
can use 0x1ED000
can use 0x1EE000
can use 0x1EF000
can use 0x1F0000
can use 0x1F1000
can use 0x1F2000
can use 0x1F3000
can use 0x1F4000
can use 0x1F5000
can use 0x1F6000
can use 0x1F7000
can use 0x1F8000
can use 0x1F9000
can use 0x1FA000
can use 0x1FB000
can use 0x1FC000
can use 0x1FD000
can use 0x1FE000
can use 0x1FF000
can use 0x200000
can use 0x201000
can use 0x202000
can use 0x203000
can use 0x204000
can use 0x205000
can use 0x206000
can use 0x207000
can use 0x208000
can use 0x209000
can use 0x20A000
can use 0x20B000
can use 0x20C000
can use 0x20D000
can use 0x20E000
can use 0x20F000
can use 0x210000
can use 0x211000
can use 0x212000
can use 0x213000
can use 0x214000
can use 0x215000
can use 0x216000
can use 0x217000
can use 0x218000
can use 0x219000
can use 0x21A000
can use 0x21B000
can use 0x21C000
can use 0x21D000
can use 0x21E000
can use 0x21F000
can use 0x220000
can use 0x221000
can use 0x222000
can use 0x223000
can use 0x224000
can use 0x225000
can use 0x226000
can use 0x227000
can use 0x228000
can use 0x229000
can use 0x22A000
can use 0x22B000
can use 0x22C000
can use 0x22D000
can use 0x22E000
can use 0x22F000
can use 0x230000
can use 0x231000
can use 0x232000
can use 0x233000
can use 0x234000
can use 0x235000
can use 0x236000
can use 0x237000
can use 0x238000
can use 0x239000
can use 0x23A000
can use 0x23B000
can use 0x23C000
can use 0x23D000
can use 0x23E000
can use 0x23F000
can use 0x240000
can use 0x241000
can use 0x242000
can use 0x243000
can use 0x244000
can use 0x245000
can use 0x246000
can use 0x247000
can use 0x248000
can use 0x249000
can use 0x24A000
can use 0x24B000
can use 0x24C000
can use 0x24D000
can use 0x24E000
can use 0x24F000
can use 0x250000
can use 0x251000
can use 0x252000
can use 0x253000
can use 0x254000
can use 0x255000
can use 0x256000
can use 0x257000
can use 0x258000
can use 0x259000
can use 0x25A000
can use 0x25B000
can use 0x25C000
can use 0x25D000
can use 0x25E000
can use 0x25F000
can use 0x260000
can use 0x261000
can use 0x262000
can use 0x263000
can use 0x264000
can use 0x265000
can use 0x266000
can use 0x267000
can use 0x268000
can use 0x269000
can use 0x26A000
can use 0x26B000
can use 0x26C000
can use 0x26D000
can use 0x26E000
can use 0x26F000
can use 0x270000
can use 0x271000
can use 0x272000
can use 0x273000
can use 0x274000
can use 0x275000
can use 0x276000
can use 0x277000
can use 0x278000
can use 0x279000
can use 0x27A000
can use 0x27B000
can use 0x27C000
can use 0x27D000
can use 0x27E000
can use 0x27F000
can use 0x280000
can use 0x281000
can use 0x282000
can use 0x283000
can use 0x284000
can use 0x285000
can use 0x286000
can use 0x287000
can use 0x288000
can use 0x289000
can use 0x28A000
can use 0x28B000
can use 0x28C000
can use 0x28D000
can use 0x28E000
can use 0x28F000
can use 0x290000
can use 0x291000
can use 0x292000
can use 0x293000
can use 0x294000
can use 0x295000
can use 0x296000
can use 0x297000
can use 0x298000
can use 0x299000
can use 0x29A000
can use 0x29B000
can use 0x29C000
can use 0x29D000
can use 0x29E000
can use 0x29F000
can use 0x2A0000
can use 0x2A1000
can use 0x2A2000
can use 0x2A3000
can use 0x2A4000
can use 0x2A5000
can use 0x2A6000
can use 0x2A7000
can use 0x2A8000
can use 0x2A9000
can use 0x2AA000
can use 0x2AB000
can use 0x2AC000
can use 0x2AD000
can use 0x2AE000
can use 0x2AF000
can use 0x2B0000
can use 0x2B1000
can use 0x2B2000
can use 0x2B3000
can use 0x2B4000
can use 0x2B5000
can use 0x2B6000
can use 0x2B7000
can use 0x2B8000
can use 0x2B9000
can use 0x2BA000
can use 0x2BB000
can use 0x2BC000
can use 0x2BD000
can use 0x2BE000
can use 0x2BF000
can use 0x2C0000
can use 0x2C1000
can use 0x2C2000
can use 0x2C3000
can use 0x2C4000
can use 0x2C5000
can use 0x2C6000
can use 0x2C7000
can use 0x2C8000
can use 0x2C9000
can use 0x2CA000
can use 0x2CB000
can use 0x2CC000
can use 0x2CD000
can use 0x2CE000
can use 0x2CF000
can use 0x2D0000
can use 0x2D1000
can use 0x2D2000
can use 0x2D3000
can use 0x2D4000
can use 0x2D5000
can use 0x2D6000
can use 0x2D7000
can use 0x2D8000
can use 0x2D9000
can use 0x2DA000
can use 0x2DB000
can use 0x2DC000
can use 0x2DD000
can use 0x2DE000
can use 0x2DF000
can use 0x2E0000
can use 0x2E1000
can use 0x2E2000
can use 0x2E3000
can use 0x2E4000
can use 0x2E5000
can use 0x2E6000
can use 0x2E7000
can use 0x2E8000
can use 0x2E9000
can use 0x2EA000
can use 0x2EB000
can use 0x2EC000
can use 0x2ED000
can use 0x2EE000
can use 0x2EF000
can use 0x2F0000
can use 0x2F1000
can use 0x2F2000
can use 0x2F3000
can use 0x2F4000
can use 0x2F5000
can use 0x2F6000
can use 0x2F7000
can use 0x2F8000
can use 0x2F9000
can use 0x2FA000
can use 0x2FB000
can use 0x2FC000
can use 0x2FD000
can use 0x2FE000
can use 0x2FF000
max_kernel_addr = 0xC0124000
PF: alloc on acces... cr2 = 0xC8001000, eip = 0xC010241D, err = 0x2
PF: alloc on acces... cr2 = 0xD8000FF0, eip = 0xC010243B, err = 0x2
got p=0x225000 
got p=0x226000 
got p=0x227000 
got p=0x228000 
got p=0x229000 
got p=0x22A000 
got p=0x22B000 
got p=0x22C000 
got p=0x22D000 
PF: alloc on acces... cr2 = 0xC8002EF4, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC800300C, eip = 0xC0102367, err = 0x2
OPENING System, with ref count = 1
OPENING raw-hd0, with ref count = 2
OPENING vesacon.sys, with ref count = 1
PF: alloc on acces... cr2 = 0xC8006DE8, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC8004000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC8005000, eip = 0xC0101287, err = 0x2
got p=0x233000 
got p=0x234000 
got p=0x235000 
got p=0x236000 
PF: alloc on acces... cr2 = 0xC80075F0, eip = 0xC0102367, err = 0x2
OPENING kernel.exe, with ref count = 1
PF: alloc on acces... cr2 = 0xC800A514, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC80080D3, eip = 0xC010126F, err = 0x2
PF: alloc on acces... cr2 = 0xC80090D3, eip = 0xC010126F, err = 0x2
PF: alloc on acces... cr2 = 0xC800CE80, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC800B0DB, eip = 0xC010126F, err = 0x2
PF: alloc on acces... cr2 = 0xC800D000, eip = 0xC01025A6, err = 0x2
PF: alloc on acces... cr2 = 0xC800E00C, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC800F000, eip = 0xC0102365, err = 0x2
PF: alloc on acces... cr2 = 0xC8010000, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC8011000, eip = 0xC0102365, err = 0x2
PF: alloc on acces... cr2 = 0xC8012000, eip = 0xC01025A6, err = 0x2
PF: alloc on acces... cr2 = 0xC8013010, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC8014000, eip = 0xC01025A9, err = 0x2
PF: alloc on acces... cr2 = 0xC8015000, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC8016000, eip = 0xC01025A9, err = 0x2
PF: alloc on acces... cr2 = 0xC8017000, eip = 0xC01025A9, err = 0x2
OPENING ps2.sys, with ref count = 1
got p=0x248000 
got p=0x249000 
got p=0x24A000 
Testing basic insert_back and iter                                  ... passed
Testing basic insert_front and iter                                 ... passed
Testing basic get_head and tail                                     ... passed
Testing circulate                                                   ... passed
Testing insert alternating                                          ... passed
Testing insert back updates tail correctly                          ... passed
Testing insert front updates head correctly                         ... passed
Testing remove back updates tail correctly                          ... passed
Testing remove front updates head correctly                         ... passed
Testing remove both ends                                            ... passed
Testing remove final via back                                       ... passed
Testing remove final via front                                      ... passed
Testing add first via front                                         ... passed
Testing add first via back                                          ... passed
Testing reset                                                       ... passed
Testing list remove element middle                                  ... passed
Testing list remove element first                                   ... passed
Testing list remove element last                                    ... passed
Testing list remove element only                                    ... passed
Testing list remove element non existent                            ... passed
Testing finding the root drive of a path                            ... passed
Testing splitting file paths                                        ... passed
Testing splitting file paths with multiple slashes                  ... passed
Testing colons in filenames                                         ... passed
Testing backslashes in filenames                                    ... passed
Testing long filenames (1)                                          ... passed
Testing long filenames (2)                                          ... passed
Testing long filenames (3)                                          ... passed
Testing long filenames (4)                                          ... passed
Testing finding the last file in a path with a trailing slash       ... passed
Testing finding the last file in a path                             ... passed
Testing finding the root drive with a slash after the colon         ... passed
Testing finding each segment of a filepath                          ... passed
Testing opening a file                                              ...OPENING root file.txt, with ref count = 1
 passed
Testing reading a file                                              ...OPENING root file.txt, with ref count = 1
 passed
Testing reading a file from an offset                               ...OPENING root file.txt, with ref count = 1
 passed
Testing reading a file past the end                                 ...OPENING root file.txt, with ref count = 1
 passed
Testing reading a directory with the file read function             ...OPENING test, with ref count = 1
 passed
Testing reading a file twice                                        ...OPENING root file.txt, with ref count = 1
 passed
Testing opening a file with a dot slash in the path (1)             ...OPENING root file.txt, with ref count = 1
 passed
Testing opening a file with a dot slash in the path (2)             ...OPENING root file.txt, with ref count = 1
 passed
Testing opening a file with a dot slash after the path              ... passed
Testing opening a file in a subdirectory                            ...OPENING sub file.txt, with ref count = 1
 passed
Testing opening a directory                                         ...OPENING subdir, with ref count = 1
 passed
Testing opening a file for writing                                  ... passed
Testing opening a directory for writing                             ... passed
Testing opening a file with a non-existent device                   ... passed
Testing opening a file that doesn't exist                           ... passed
Testing opening a file in the middle of a path                      ... passed
Testing opening the filesystem root                                 ...OPENING hd0, with ref count = 2
 passed
Testing backtracking through a filepath twice (1)                   ...OPENING root file.txt, with ref count = 1
 passed
Testing backtracking through a filepath once (2)                    ...OPENING root file.txt, with ref count = 1
 passed
Testing backtracking through a filepath twice (1)                   ...OPENING root file.txt, with ref count = 1
 passed
Testing backtracking through a filepath twice (2)                   ...OPENING .., with ref count = 1
 passed
Testing backtracking past the root                                  ...OPENING .., with ref count = 2
OPENING .., with ref count = 2
OPENING .., with ref count = 2
OPENING test, with ref count = 1
OPENING subdir, with ref count = 1
 passed
Testing backtracking through invalid filepath components            ...OPENING root file.txt, with ref count = 1
OPENING sub file.txt, with ref count = 1
 passed
Testing backtracking after a file has been reached                  ...OPENING root file.txt, with ref count = 1
 passed
got p=0x24C000 
got p=0x24D000 
got p=0x24E000 

 ATOS Kernel
     Copyright Alex Boxall 2022-2023

>PF: alloc on acces... cr2 = 0xC8019B94, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC8018004, eip = 0xC010604E, err = 0x2
PF: alloc on acces... cr2 = 0xC801BBE4, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC801A004, eip = 0xC010604E, err = 0x2
got p=0x254000 
got p=0x255000 
got p=0x256000 
>ABOUT TO ACQUIRE THE FILEDES LOCK IN filedes_handle_exec
ACQUIRED
RELEASED.
ABOUT TO LOAD PROGRAM.
OPENING usertest.exe, with ref count = 1
PF: alloc on acces... cr2 = 0xC801F1DC, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC801C000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC801D000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC801E000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0x10000000, eip = 0xC0101244, err = 0x2
PF: alloc on acces... cr2 = 0x10001000, eip = 0xC0101244, err = 0x2
PROGRAM LOADED.
ABOUT TO START EXECVE'D PROGRAM: ENTRY 0x100001D5, STACK 0x10000000
PF: alloc on acces... cr2 = 0xFFFFFFC, eip = 0x100001D5, err = 0x6
CALLING SBRK!
sbrk will return 0x10003000
PF: alloc on acces... cr2 = 0x10002040, eip = 0x100009A7, err = 0x6
OPENING con, with ref count = 2
OPENING con, with ref count = 3
OPENING con, with ref count = 4
OPENING con, with ref count = 5
>Unsupported command 'iser'

>PF: alloc on acces... cr2 = 0xC8020048, eip = 0xC0102367, err = 0x2
got p=0x263000 
got p=0x264000 
got p=0x265000 
>ABOUT TO ACQUIRE THE FILEDES LOCK IN filedes_handle_exec
ACQUIRED
RELEASED.
ABOUT TO LOAD PROGRAM.
OPENING usertest.exe, with ref count = 1
PF: alloc on acces... cr2 = 0xC80237D8, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC8021000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC8022000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0x10000000, eip = 0xC0101244, err = 0x2
PF: alloc on acces... cr2 = 0x10001000, eip = 0xC0101244, err = 0x2
PROGRAM LOADED.
ABOUT TO START EXECVE'D PROGRAM: ENTRY 0x100001D5, STACK 0x10000000
PF: alloc on acces... cr2 = 0xFFFFFFC, eip = 0x100001D5, err = 0x6
CALLING SBRK!
sbrk will return 0x10003000
PF: alloc on acces... cr2 = 0x10002040, eip = 0x100009A7, err = 0x6
OPENING con, with ref count = 5
OPENING con, with ref count = 6
OPENING con, with ref count = 7
OPENING con, with ref count = 8
>PF: alloc on acces... cr2 = 0xC80243D0, eip = 0xC0102367, err = 0x2
got p=0x271000 
got p=0x272000 
got p=0x273000 
>ABOUT TO ACQUIRE THE FILEDES LOCK IN filedes_handle_exec
ACQUIRED
RELEASED.
ABOUT TO LOAD PROGRAM.
OPENING usertest.exe, with ref count = 1
PF: alloc on acces... cr2 = 0xC8027DD4, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC8025000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC8026000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0x10000000, eip = 0xC0101244, err = 0x2
PF: alloc on acces... cr2 = 0x10001000, eip = 0xC0101244, err = 0x2
PROGRAM LOADED.
ABOUT TO START EXECVE'D PROGRAM: ENTRY 0x100001D5, STACK 0x10000000
PF: alloc on acces... cr2 = 0xFFFFFFC, eip = 0x100001D5, err = 0x6
CALLING SBRK!
sbrk will return 0x10003000
PF: alloc on acces... cr2 = 0x10002040, eip = 0x100009A7, err = 0x6
OPENING con, with ref count = 8
OPENING con, with ref count = 9
OPENING con, with ref count = 10
OPENING con, with ref count = 11
>PF: alloc on acces... cr2 = 0xC80289CC, eip = 0xC0102367, err = 0x2
got p=0x27F000 
got p=0x280000 
got p=0x281000 
>ABOUT TO ACQUIRE THE FILEDES LOCK IN filedes_handle_exec
ACQUIRED
RELEASED.
ABOUT TO LOAD PROGRAM.
OPENING usertest.exe, with ref count = 1
PF: alloc on acces... cr2 = 0xC802C3D0, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC8029000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC802A000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC802B000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0x10000000, eip = 0xC0101244, err = 0x2
PF: alloc on acces... cr2 = 0x10001000, eip = 0xC0101244, err = 0x2
PROGRAM LOADED.
ABOUT TO START EXECVE'D PROGRAM: ENTRY 0x100001D5, STACK 0x10000000
PF: alloc on acces... cr2 = 0xFFFFFFC, eip = 0x100001D5, err = 0x6
CALLING SBRK!
sbrk will return 0x10003000
PF: alloc on acces... cr2 = 0x10002040, eip = 0x100009A7, err = 0x6
OPENING con, with ref count = 11
OPENING con, with ref count = 12
OPENING con, with ref count = 13
OPENING con, with ref count = 14
>PF: alloc on acces... cr2 = 0xC802D024, eip = 0xC0102367, err = 0x2
got p=0x28E000 
got p=0x28F000 
got p=0x290000 
>ABOUT TO ACQUIRE THE FILEDES LOCK IN filedes_handle_exec
ACQUIRED
RELEASED.
ABOUT TO LOAD PROGRAM.
OPENING usertest.exe, with ref count = 1
PF: alloc on acces... cr2 = 0xC80309CC, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC802E000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC802F000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0x10000000, eip = 0xC0101244, err = 0x2
PF: alloc on acces... cr2 = 0x10001000, eip = 0xC0101244, err = 0x2
PROGRAM LOADED.
ABOUT TO START EXECVE'D PROGRAM: ENTRY 0x100001D5, STACK 0x10000000
PF: alloc on acces... cr2 = 0xFFFFFFC, eip = 0x100001D5, err = 0x6
CALLING SBRK!
sbrk will return 0x10003000
PF: alloc on acces... cr2 = 0x10002040, eip = 0x100009A7, err = 0x6
OPENING con, with ref count = 14
OPENING con, with ref count = 15
OPENING con, with ref count = 16
OPENING con, with ref count = 17
>PF: alloc on acces... cr2 = 0xC80315C4, eip = 0xC0102367, err = 0x2
got p=0x29C000 
got p=0x29D000 
got p=0x29E000 
>ABOUT TO ACQUIRE THE FILEDES LOCK IN filedes_handle_exec
ACQUIRED
RELEASED.
ABOUT TO LOAD PROGRAM.
OPENING usertest.exe, with ref count = 1
PF: alloc on acces... cr2 = 0xC8034FC8, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC8032000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC8033000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0x10000000, eip = 0xC0101244, err = 0x2
PF: alloc on acces... cr2 = 0x10001000, eip = 0xC0101244, err = 0x2
PROGRAM LOADED.
ABOUT TO START EXECVE'D PROGRAM: ENTRY 0x100001D5, STACK 0x10000000
PF: alloc on acces... cr2 = 0xFFFFFFC, eip = 0x100001D5, err = 0x6
CALLING SBRK!
sbrk will return 0x10003000
PF: alloc on acces... cr2 = 0x10002040, eip = 0x100009A7, err = 0x6
OPENING con, with ref count = 17
OPENING con, with ref count = 18
OPENING con, with ref count = 19
OPENING con, with ref count = 20
>PF: alloc on acces... cr2 = 0xC8035BC0, eip = 0xC0102367, err = 0x2
got p=0x2AA000 
got p=0x2AB000 
got p=0x2AC000 
>ABOUT TO ACQUIRE THE FILEDES LOCK IN filedes_handle_exec
ACQUIRED
RELEASED.
ABOUT TO LOAD PROGRAM.
OPENING usertest.exe, with ref count = 1
PF: alloc on acces... cr2 = 0xC80395C4, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC8036000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC8037000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC8038000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0x10000000, eip = 0xC0101244, err = 0x2
PF: alloc on acces... cr2 = 0x10001000, eip = 0xC0101244, err = 0x2
PROGRAM LOADED.
ABOUT TO START EXECVE'D PROGRAM: ENTRY 0x100001D5, STACK 0x10000000
PF: alloc on acces... cr2 = 0xFFFFFFC, eip = 0x100001D5, err = 0x6
CALLING SBRK!
sbrk will return 0x10003000
PF: alloc on acces... cr2 = 0x10002040, eip = 0x100009A7, err = 0x6
OPENING con, with ref count = 20
OPENING con, with ref count = 21
OPENING con, with ref count = 22
OPENING con, with ref count = 23
>PF: alloc on acces... cr2 = 0xC803A1BC, eip = 0xC0102367, err = 0x2
got p=0x2B9000 
got p=0x2BA000 
got p=0x2BB000 
>ABOUT TO ACQUIRE THE FILEDES LOCK IN filedes_handle_exec
ACQUIRED
RELEASED.
ABOUT TO LOAD PROGRAM.
OPENING usertest.exe, with ref count = 1
PF: alloc on acces... cr2 = 0xC803DBC0, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC803B000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC803C000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0x10000000, eip = 0xC0101244, err = 0x2
PF: alloc on acces... cr2 = 0x10001000, eip = 0xC0101244, err = 0x2
PROGRAM LOADED.
ABOUT TO START EXECVE'D PROGRAM: ENTRY 0x100001D5, STACK 0x10000000
PF: alloc on acces... cr2 = 0xFFFFFFC, eip = 0x100001D5, err = 0x6
CALLING SBRK!
sbrk will return 0x10003000
PF: alloc on acces... cr2 = 0x10002040, eip = 0x100009A7, err = 0x6
OPENING con, with ref count = 23
OPENING con, with ref count = 24
OPENING con, with ref count = 25
OPENING con, with ref count = 26
>PF: alloc on acces... cr2 = 0xC803E7B8, eip = 0xC0102367, err = 0x2
got p=0x2C7000 
got p=0x2C8000 
got p=0x2C9000 
>ABOUT TO ACQUIRE THE FILEDES LOCK IN filedes_handle_exec
ACQUIRED
RELEASED.
ABOUT TO LOAD PROGRAM.
OPENING usertest.exe, with ref count = 1
PF: alloc on acces... cr2 = 0xC80421BC, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC803F000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC8040000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC8041000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0x10000000, eip = 0xC0101244, err = 0x2
PF: alloc on acces... cr2 = 0x10001000, eip = 0xC0101244, err = 0x2
PROGRAM LOADED.
ABOUT TO START EXECVE'D PROGRAM: ENTRY 0x100001D5, STACK 0x10000000
PF: alloc on acces... cr2 = 0xFFFFFFC, eip = 0x100001D5, err = 0x6
CALLING SBRK!
sbrk will return 0x10003000
PF: alloc on acces... cr2 = 0x10002040, eip = 0x100009A7, err = 0x6
OPENING con, with ref count = 26
OPENING con, with ref count = 27
OPENING con, with ref count = 28
OPENING con, with ref count = 29
Memory used: 90% (1728 / 1904 KB)

>Memory used: 90% (1728 / 1904 KB)

>PF: alloc on acces... cr2 = 0xC8043028, eip = 0xC0102367, err = 0x2
got p=0x2D6000 
got p=0x2D7000 
got p=0x2D8000 
>ABOUT TO ACQUIRE THE FILEDES LOCK IN filedes_handle_exec
ACQUIRED
RELEASED.
ABOUT TO LOAD PROGRAM.
OPENING usertest.exe, with ref count = 1
PF: alloc on acces... cr2 = 0xC80467B8, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC8044000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC8045000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0x10000000, eip = 0xC0101244, err = 0x2
PF: alloc on acces... cr2 = 0x10001000, eip = 0xC0101244, err = 0x2
PROGRAM LOADED.
ABOUT TO START EXECVE'D PROGRAM: ENTRY 0x100001D5, STACK 0x10000000
PF: alloc on acces... cr2 = 0xFFFFFFC, eip = 0x100001D5, err = 0x6
CALLING SBRK!
sbrk will return 0x10003000
PF: alloc on acces... cr2 = 0x10002040, eip = 0x100009A7, err = 0x6
OPENING con, with ref count = 29
OPENING con, with ref count = 30
OPENING con, with ref count = 31
OPENING con, with ref count = 32
>Unsupported command 'ram\'

>Unsupported command 'ram''

>Memory used: 93% (1784 / 1904 KB)








>PF: alloc on acces... cr2 = 0xC80473B0, eip = 0xC0102367, err = 0x2
got p=0x2E4000 
got p=0x2E5000 
got p=0x2E6000 
>ABOUT TO ACQUIRE THE FILEDES LOCK IN filedes_handle_exec
ACQUIRED
RELEASED.
ABOUT TO LOAD PROGRAM.
OPENING usertest.exe, with ref count = 1
PF: alloc on acces... cr2 = 0xC804ADB4, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC8048000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC8049000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0x10000000, eip = 0xC0101244, err = 0x2
PF: alloc on acces... cr2 = 0x10001000, eip = 0xC0101244, err = 0x2
PROGRAM LOADED.
ABOUT TO START EXECVE'D PROGRAM: ENTRY 0x100001D5, STACK 0x10000000
PF: alloc on acces... cr2 = 0xFFFFFFC, eip = 0x100001D5, err = 0x6
CALLING SBRK!
sbrk will return 0x10003000
PF: alloc on acces... cr2 = 0x10002040, eip = 0x100009A7, err = 0x6
OPENING con, with ref count = 32
OPENING con, with ref count = 33
OPENING con, with ref count = 34
OPENING con, with ref count = 35
>Memory used: 96% (1840 / 1904 KB)






>PF: alloc on acces... cr2 = 0xC804B9AC, eip = 0xC0102367, err = 0x2
got p=0x2F2000 
got p=0x2F3000 
got p=0x2F4000 
>ABOUT TO ACQUIRE THE FILEDES LOCK IN filedes_handle_exec
ACQUIRED
RELEASED.
ABOUT TO LOAD PROGRAM.
OPENING usertest.exe, with ref count = 1
PF: alloc on acces... cr2 = 0xC804F3B0, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC804C000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC804D000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC804E000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0x10000000, eip = 0xC0101244, err = 0x2
PF: alloc on acces... cr2 = 0x10001000, eip = 0xC0101244, err = 0x2
PROGRAM LOADED.
ABOUT TO START EXECVE'D PROGRAM: ENTRY 0x100001D5, STACK 0x10000000
PF: alloc on acces... cr2 = 0xFFFFFFC, eip = 0x100001D5, err = 0x6
CALLING SBRK!
sbrk will return 0x10003000
PF: alloc on acces... cr2 = 0x10002040, eip = 0x100009A7, err = 0x6
OPENING con, with ref count = 35
OPENING con, with ref count = 36
OPENING con, with ref count = 37
OPENING con, with ref count = 38
>Memory used: 99% (1900 / 1904 KB)

>Assertion failed: !spinlock_is_held(lock) postpone thread switch lock [thread/spinlock.c: 51]
---------------
@@@

Assertion failed: !spinlock_is_held(lock) postpone thread switch lock [thread/spinlock.c: 51]


 *** KERNEL PANIC ***

Assertion fail

kernel_main
can use 0x124000
can use 0x125000
can use 0x126000
can use 0x127000
can use 0x128000
can use 0x129000
can use 0x12A000
can use 0x12B000
can use 0x12C000
can use 0x12D000
can use 0x12E000
can use 0x12F000
can use 0x130000
can use 0x131000
can use 0x132000
can use 0x133000
can use 0x134000
can use 0x135000
can use 0x136000
can use 0x137000
can use 0x138000
can use 0x139000
can use 0x13A000
can use 0x13B000
can use 0x13C000
can use 0x13D000
can use 0x13E000
can use 0x13F000
can use 0x140000
can use 0x141000
can use 0x142000
can use 0x143000
can use 0x144000
can use 0x145000
can use 0x146000
can use 0x147000
can use 0x148000
can use 0x149000
can use 0x14A000
can use 0x14B000
can use 0x14C000
can use 0x14D000
can use 0x14E000
can use 0x14F000
can use 0x150000
can use 0x151000
can use 0x152000
can use 0x153000
can use 0x154000
can use 0x155000
can use 0x156000
can use 0x157000
can use 0x158000
can use 0x159000
can use 0x15A000
can use 0x15B000
can use 0x15C000
can use 0x15D000
can use 0x15E000
can use 0x15F000
can use 0x160000
can use 0x161000
can use 0x162000
can use 0x163000
can use 0x164000
can use 0x165000
can use 0x166000
can use 0x167000
can use 0x168000
can use 0x169000
can use 0x16A000
can use 0x16B000
can use 0x16C000
can use 0x16D000
can use 0x16E000
can use 0x16F000
can use 0x170000
can use 0x171000
can use 0x172000
can use 0x173000
can use 0x174000
can use 0x175000
can use 0x176000
can use 0x177000
can use 0x178000
can use 0x179000
can use 0x17A000
can use 0x17B000
can use 0x17C000
can use 0x17D000
can use 0x17E000
can use 0x17F000
can use 0x180000
can use 0x181000
can use 0x182000
can use 0x183000
can use 0x184000
can use 0x185000
can use 0x186000
can use 0x187000
can use 0x188000
can use 0x189000
can use 0x18A000
can use 0x18B000
can use 0x18C000
can use 0x18D000
can use 0x18E000
can use 0x18F000
can use 0x190000
can use 0x191000
can use 0x192000
can use 0x193000
can use 0x194000
can use 0x195000
can use 0x196000
can use 0x197000
can use 0x198000
can use 0x199000
can use 0x19A000
can use 0x19B000
can use 0x19C000
can use 0x19D000
can use 0x19E000
can use 0x19F000
can use 0x1A0000
can use 0x1A1000
can use 0x1A2000
can use 0x1A3000
can use 0x1A4000
can use 0x1A5000
can use 0x1A6000
can use 0x1A7000
can use 0x1A8000
can use 0x1A9000
can use 0x1AA000
can use 0x1AB000
can use 0x1AC000
can use 0x1AD000
can use 0x1AE000
can use 0x1AF000
can use 0x1B0000
can use 0x1B1000
can use 0x1B2000
can use 0x1B3000
can use 0x1B4000
can use 0x1B5000
can use 0x1B6000
can use 0x1B7000
can use 0x1B8000
can use 0x1B9000
can use 0x1BA000
can use 0x1BB000
can use 0x1BC000
can use 0x1BD000
can use 0x1BE000
can use 0x1BF000
can use 0x1C0000
can use 0x1C1000
can use 0x1C2000
can use 0x1C3000
can use 0x1C4000
can use 0x1C5000
can use 0x1C6000
can use 0x1C7000
can use 0x1C8000
can use 0x1C9000
can use 0x1CA000
can use 0x1CB000
can use 0x1CC000
can use 0x1CD000
can use 0x1CE000
can use 0x1CF000
can use 0x1D0000
can use 0x1D1000
can use 0x1D2000
can use 0x1D3000
can use 0x1D4000
can use 0x1D5000
can use 0x1D6000
can use 0x1D7000
can use 0x1D8000
can use 0x1D9000
can use 0x1DA000
can use 0x1DB000
can use 0x1DC000
can use 0x1DD000
can use 0x1DE000
can use 0x1DF000
can use 0x1E0000
can use 0x1E1000
can use 0x1E2000
can use 0x1E3000
can use 0x1E4000
can use 0x1E5000
can use 0x1E6000
can use 0x1E7000
can use 0x1E8000
can use 0x1E9000
can use 0x1EA000
can use 0x1EB000
can use 0x1EC000
can use 0x1ED000
can use 0x1EE000
can use 0x1EF000
can use 0x1F0000
can use 0x1F1000
can use 0x1F2000
can use 0x1F3000
can use 0x1F4000
can use 0x1F5000
can use 0x1F6000
can use 0x1F7000
can use 0x1F8000
can use 0x1F9000
can use 0x1FA000
can use 0x1FB000
can use 0x1FC000
can use 0x1FD000
can use 0x1FE000
can use 0x1FF000
can use 0x200000
can use 0x201000
can use 0x202000
can use 0x203000
can use 0x204000
can use 0x205000
can use 0x206000
can use 0x207000
can use 0x208000
can use 0x209000
can use 0x20A000
can use 0x20B000
can use 0x20C000
can use 0x20D000
can use 0x20E000
can use 0x20F000
can use 0x210000
can use 0x211000
can use 0x212000
can use 0x213000
can use 0x214000
can use 0x215000
can use 0x216000
can use 0x217000
can use 0x218000
can use 0x219000
can use 0x21A000
can use 0x21B000
can use 0x21C000
can use 0x21D000
can use 0x21E000
can use 0x21F000
can use 0x220000
can use 0x221000
can use 0x222000
can use 0x223000
can use 0x224000
can use 0x225000
can use 0x226000
can use 0x227000
can use 0x228000
can use 0x229000
can use 0x22A000
can use 0x22B000
can use 0x22C000
can use 0x22D000
can use 0x22E000
can use 0x22F000
can use 0x230000
can use 0x231000
can use 0x232000
can use 0x233000
can use 0x234000
can use 0x235000
can use 0x236000
can use 0x237000
can use 0x238000
can use 0x239000
can use 0x23A000
can use 0x23B000
can use 0x23C000
can use 0x23D000
can use 0x23E000
can use 0x23F000
can use 0x240000
can use 0x241000
can use 0x242000
can use 0x243000
can use 0x244000
can use 0x245000
can use 0x246000
can use 0x247000
can use 0x248000
can use 0x249000
can use 0x24A000
can use 0x24B000
can use 0x24C000
can use 0x24D000
can use 0x24E000
can use 0x24F000
can use 0x250000
can use 0x251000
can use 0x252000
can use 0x253000
can use 0x254000
can use 0x255000
can use 0x256000
can use 0x257000
can use 0x258000
can use 0x259000
can use 0x25A000
can use 0x25B000
can use 0x25C000
can use 0x25D000
can use 0x25E000
can use 0x25F000
can use 0x260000
can use 0x261000
can use 0x262000
can use 0x263000
can use 0x264000
can use 0x265000
can use 0x266000
can use 0x267000
can use 0x268000
can use 0x269000
can use 0x26A000
can use 0x26B000
can use 0x26C000
can use 0x26D000
can use 0x26E000
can use 0x26F000
can use 0x270000
can use 0x271000
can use 0x272000
can use 0x273000
can use 0x274000
can use 0x275000
can use 0x276000
can use 0x277000
can use 0x278000
can use 0x279000
can use 0x27A000
can use 0x27B000
can use 0x27C000
can use 0x27D000
can use 0x27E000
can use 0x27F000
can use 0x280000
can use 0x281000
can use 0x282000
can use 0x283000
can use 0x284000
can use 0x285000
can use 0x286000
can use 0x287000
can use 0x288000
can use 0x289000
can use 0x28A000
can use 0x28B000
can use 0x28C000
can use 0x28D000
can use 0x28E000
can use 0x28F000
can use 0x290000
can use 0x291000
can use 0x292000
can use 0x293000
can use 0x294000
can use 0x295000
can use 0x296000
can use 0x297000
can use 0x298000
can use 0x299000
can use 0x29A000
can use 0x29B000
can use 0x29C000
can use 0x29D000
can use 0x29E000
can use 0x29F000
can use 0x2A0000
can use 0x2A1000
can use 0x2A2000
can use 0x2A3000
can use 0x2A4000
can use 0x2A5000
can use 0x2A6000
can use 0x2A7000
can use 0x2A8000
can use 0x2A9000
can use 0x2AA000
can use 0x2AB000
can use 0x2AC000
can use 0x2AD000
can use 0x2AE000
can use 0x2AF000
can use 0x2B0000
can use 0x2B1000
can use 0x2B2000
can use 0x2B3000
can use 0x2B4000
can use 0x2B5000
can use 0x2B6000
can use 0x2B7000
can use 0x2B8000
can use 0x2B9000
can use 0x2BA000
can use 0x2BB000
can use 0x2BC000
can use 0x2BD000
can use 0x2BE000
can use 0x2BF000
can use 0x2C0000
can use 0x2C1000
can use 0x2C2000
can use 0x2C3000
can use 0x2C4000
can use 0x2C5000
can use 0x2C6000
can use 0x2C7000
can use 0x2C8000
can use 0x2C9000
can use 0x2CA000
can use 0x2CB000
can use 0x2CC000
can use 0x2CD000
can use 0x2CE000
can use 0x2CF000
can use 0x2D0000
can use 0x2D1000
can use 0x2D2000
can use 0x2D3000
can use 0x2D4000
can use 0x2D5000
can use 0x2D6000
can use 0x2D7000
can use 0x2D8000
can use 0x2D9000
can use 0x2DA000
can use 0x2DB000
can use 0x2DC000
can use 0x2DD000
can use 0x2DE000
can use 0x2DF000
can use 0x2E0000
can use 0x2E1000
can use 0x2E2000
can use 0x2E3000
can use 0x2E4000
can use 0x2E5000
can use 0x2E6000
can use 0x2E7000
can use 0x2E8000
can use 0x2E9000
can use 0x2EA000
can use 0x2EB000
can use 0x2EC000
can use 0x2ED000
can use 0x2EE000
can use 0x2EF000
can use 0x2F0000
can use 0x2F1000
can use 0x2F2000
can use 0x2F3000
can use 0x2F4000
can use 0x2F5000
can use 0x2F6000
can use 0x2F7000
can use 0x2F8000
can use 0x2F9000
can use 0x2FA000
can use 0x2FB000
can use 0x2FC000
can use 0x2FD000
can use 0x2FE000
can use 0x2FF000
max_kernel_addr = 0xC0124000
PF: alloc on acces... cr2 = 0xC8001000, eip = 0xC010241D, err = 0x2
PF: alloc on acces... cr2 = 0xD8000FF0, eip = 0xC010243B, err = 0x2
got p=0x225000 
got p=0x226000 
got p=0x227000 
got p=0x228000 
got p=0x229000 
got p=0x22A000 
got p=0x22B000 
got p=0x22C000 
got p=0x22D000 
PF: alloc on acces... cr2 = 0xC8002EF4, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC800300C, eip = 0xC0102367, err = 0x2
OPENING System, with ref count = 1
OPENING raw-hd0, with ref count = 2
OPENING vesacon.sys, with ref count = 1
PF: alloc on acces... cr2 = 0xC8006DE8, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC8004000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC8005000, eip = 0xC0101287, err = 0x2
got p=0x233000 
got p=0x234000 
got p=0x235000 
got p=0x236000 
PF: alloc on acces... cr2 = 0xC80075F0, eip = 0xC0102367, err = 0x2
OPENING kernel.exe, with ref count = 1
PF: alloc on acces... cr2 = 0xC800A514, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC80080D3, eip = 0xC010126F, err = 0x2
PF: alloc on acces... cr2 = 0xC80090D3, eip = 0xC010126F, err = 0x2
PF: alloc on acces... cr2 = 0xC800CE80, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC800B0DB, eip = 0xC010126F, err = 0x2
PF: alloc on acces... cr2 = 0xC800D000, eip = 0xC01025A6, err = 0x2
PF: alloc on acces... cr2 = 0xC800E00C, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC800F000, eip = 0xC0102365, err = 0x2
PF: alloc on acces... cr2 = 0xC8010000, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC8011000, eip = 0xC0102365, err = 0x2
PF: alloc on acces... cr2 = 0xC8012000, eip = 0xC01025A6, err = 0x2
PF: alloc on acces... cr2 = 0xC8013010, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC8014000, eip = 0xC01025A9, err = 0x2
PF: alloc on acces... cr2 = 0xC8015000, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC8016000, eip = 0xC01025A9, err = 0x2
PF: alloc on acces... cr2 = 0xC8017000, eip = 0xC01025A9, err = 0x2
OPENING ps2.sys, with ref count = 1
got p=0x248000 
got p=0x249000 
got p=0x24A000 
Testing basic insert_back and iter                                  ... passed
Testing basic insert_front and iter                                 ... passed
Testing basic get_head and tail                                     ... passed
Testing circulate                                                   ... passed
Testing insert alternating                                          ... passed
Testing insert back updates tail correctly                          ... passed
Testing insert front updates head correctly                         ... passed
Testing remove back updates tail correctly                          ... passed
Testing remove front updates head correctly                         ... passed
Testing remove both ends                                            ... passed
Testing remove final via back                                       ... passed
Testing remove final via front                                      ... passed
Testing add first via front                                         ... passed
Testing add first via back                                          ... passed
Testing reset                                                       ... passed
Testing list remove element middle                                  ... passed
Testing list remove element first                                   ... passed
Testing list remove element last                                    ... passed
Testing list remove element only                                    ... passed
Testing list remove element non existent                            ... passed
Testing finding the root drive of a path                            ... passed
Testing splitting file paths                                        ... passed
Testing splitting file paths with multiple slashes                  ... passed
Testing colons in filenames                                         ... passed
Testing backslashes in filenames                                    ... passed
Testing long filenames (1)                                          ... passed
Testing long filenames (2)                                          ... passed
Testing long filenames (3)                                          ... passed
Testing long filenames (4)                                          ... passed
Testing finding the last file in a path with a trailing slash       ... passed
Testing finding the last file in a path                             ... passed
Testing finding the root drive with a slash after the colon         ... passed
Testing finding each segment of a filepath                          ... passed
Testing opening a file                                              ...OPENING root file.txt, with ref count = 1
 passed
Testing reading a file                                              ...OPENING root file.txt, with ref count = 1
 passed
Testing reading a file from an offset                               ...OPENING root file.txt, with ref count = 1
 passed
Testing reading a file past the end                                 ...OPENING root file.txt, with ref count = 1
 passed
Testing reading a directory with the file read function             ...OPENING test, with ref count = 1
 passed
Testing reading a file twice                                        ...OPENING root file.txt, with ref count = 1
 passed
Testing opening a file with a dot slash in the path (1)             ...OPENING root file.txt, with ref count = 1
 passed
Testing opening a file with a dot slash in the path (2)             ...OPENING root file.txt, with ref count = 1
 passed
Testing opening a file with a dot slash after the path              ... passed
Testing opening a file in a subdirectory                            ...OPENING sub file.txt, with ref count = 1
 passed
Testing opening a directory                                         ...OPENING subdir, with ref count = 1
 passed
Testing opening a file for writing                                  ... passed
Testing opening a directory for writing                             ... passed
Testing opening a file with a non-existent device                   ... passed
Testing opening a file that doesn't exist                           ... passed
Testing opening a file in the middle of a path                      ... passed
Testing opening the filesystem root                                 ...OPENING hd0, with ref count = 2
 passed
Testing backtracking through a filepath twice (1)                   ...OPENING root file.txt, with ref count = 1
 passed
Testing backtracking through a filepath once (2)                    ...OPENING root file.txt, with ref count = 1
 passed
Testing backtracking through a filepath twice (1)                   ...OPENING root file.txt, with ref count = 1
 passed
Testing backtracking through a filepath twice (2)                   ...OPENING .., with ref count = 1
 passed
Testing backtracking past the root                                  ...OPENING .., with ref count = 2
OPENING .., with ref count = 2
OPENING .., with ref count = 2
OPENING test, with ref count = 1
OPENING subdir, with ref count = 1
 passed
Testing backtracking through invalid filepath components            ...OPENING root file.txt, with ref count = 1
OPENING sub file.txt, with ref count = 1
 passed
Testing backtracking after a file has been reached                  ...OPENING root file.txt, with ref count = 1
 passed
got p=0x24C000 
got p=0x24D000 
got p=0x24E000 

 ATOS Kernel
     Copyright Alex Boxall 2022-2023

>PF: alloc on acces... cr2 = 0xC8019B94, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC8018004, eip = 0xC010604E, err = 0x2
PF: alloc on acces... cr2 = 0xC801BBE4, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC801A004, eip = 0xC010604E, err = 0x2
got p=0x254000 
got p=0x255000 
got p=0x256000 
>ABOUT TO ACQUIRE THE FILEDES LOCK IN filedes_handle_exec
ACQUIRED
RELEASED.
ABOUT TO LOAD PROGRAM.
OPENING usertest.exe, with ref count = 1
PF: alloc on acces... cr2 = 0xC801F1DC, eip = 0xC0102367, err = 0x2
PF: alloc on acces... cr2 = 0xC801C000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC801D000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0xC801E000, eip = 0xC0101287, err = 0x2
PF: alloc on acces... cr2 = 0x10000000, eip = 0xC0101244, err = 0x2
PF: alloc on acces... cr2 = 0x10001000, eip = 0xC0101244, err = 0x2
PROGRAM LOADED.
ABOUT TO START EXECVE'D PROGRAM: ENTRY 0x100001D5, STACK 0x10000000
PF: alloc on acces... cr2 = 0xFFFFFFC, eip = 0x100001D5, err = 0x6
PF (cr2 = 0x10002E50, eip = 0x100009A7, err = 0x6)
PF (cr2 = 0x10002E50, eip = 0x100009A7, err = 0x7)
x86_PAGE_LOCKED (cr2 = 0x10002E50, eip = 0x100009A7, err = 0x7)
unhandled exception - page fault (14)
Assertion failed: !spinlock_is_held(lock) per-vas lock [thread/spinlock.c: 51]
---------------
@@@

Assertion failed: !spinlock_is_held(lock) per-vas lock [thread/spinlock.c: 51]


 *** KERNEL PANIC ***

Assertion fail
